{"version":3,"sources":["assets/script/bgmove.ts","assets/script/coinchange.ts","assets/script/coindet.ts","assets/script/heromove.ts","assets/script/main.ts","assets/script/obschange.ts","assets/script/obsdet.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAEM;AAIN;AAA+B;AAA/B;AAAA;AAEI;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;AAuDA;AACJ;AAtDI;AAEA;AACI;AACA;AACA;AACA;AACJ;AAEA;AAEA;AAAA;AACI;AAEI;AACA;AACI;AACH;AACG;AACA;AACH;AACD;AACA;AACA;AACJ;AAEJ;AACA;AACI;AACA;AACA;AACJ;AACA;AACI;AACI;AACH;AACG;AACA;AACH;AACD;AACI;AACA;AACH;AACG;AACA;AACA;AACH;AACD;AACA;AACA;AACI;AACH;AACL;AAlES;AADZ;AACY;AAoEb;AApEA;AAAa;;;;;;;;;ACXb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAsC;AAAtC;AAEI;AAFJ;AAII;AACA;AACA;AACA;;AAgBA;AACJ;AAhBI;AAAA;AACI;AACI;AACA;AACA;AACJ;AACJ;AACA;AACI;AACA;AACI;AACH;AACD;AACJ;AArBiB;AADpB;AACoB;AAwBrB;AAxBA;AAAqB;;;;;;;;;ACVrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAsC;AAAtC;;AAkBA;AAfI;AAEA;AAEA;AAEA;AAEA;AACI;AACA;AACA;AACJ;AAfiB;AADpB;AACoB;AAkBrB;AAlBA;AAAqB;;;;;;;;;ACVrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAsC;AAAtC;AAEI;AACA;AAHJ;AAKI;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;;AAwHJ;AAvHI;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACI;AACI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACJ;AACA;AAEI;AAEI;AACH;AACI;AAED;AACI;AACH;AACD;AACH;AACI;AAED;AACI;AACH;AACD;AACH;AACL;AACA;AAEI;AAEI;AACA;AACA;AACI;AACH;AACD;AACH;AACI;AAED;AACA;AACA;AACI;AACH;AACD;AACH;AACL;AACA;AACI;AACA;AACJ;AACA;AACI;AACJ;AACA;AACI;AACJ;AACA;AACI;AACI;AACI;AACH;AACG;AACA;AACH;AACD;AACI;AACH;AACJ;AACG;AACA;AACI;AACA;AACH;AACI;AACD;AACA;AACH;AACJ;AACD;AACI;AACI;AACH;AACG;AACA;AACH;AACJ;AACL;AAzHA;AADC;AAC6B;AAdb;AADpB;AACoB;AAwIrB;AAxIA;AAAqB;;;;;;;;;ACVrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AACN;AAGA;AAAsC;AAAtC;AAAA;AAGI;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAGA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AA6GJ;AA3GI;AACI;AACA;AACA;AACA;AACI;AACA;AACH;AACD;AACA;AACA;AACI;AACA;AACH;AACL;AAEA;AACI;AACJ;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AAAA;AACI;AACI;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;AACL;AACA;AAAA;AACI;AACI;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;AACL;AACA;AAAA;AACI;AACA;AACI;AACA;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACI;AACA;AACA;AACJ;AACA;AACI;AACI;AACA;AACH;AACL;AACA;AACI;AACI;AACA;AACA;AACH;AACL;AACA;AACI;AACI;AACA;AACH;AACL;AACA;AAEI;AAEI;AACI;AACA;AACA;AACH;AACJ;AACL;AAtJA;AADC;AACsB;AAEvB;AADC;AACwB;AAMzB;AADC;AACuB;AAExB;AADC;AACyB;AAE1B;AADC;AACwB;AAEzB;AADC;AAC0B;AAE3B;AADC;AACyB;AAE1B;AADC;AAC4B;AAK7B;AADC;AAC4B;AAE7B;AADC;AAC6B;AAG9B;AADC;AACyB;AAE1B;AADC;AAC0B;AAE3B;AADC;AAC6B;AAnCb;AADpB;AACoB;AA0JrB;AA1JA;AAAqB;;;;;;;;;ACXrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAsC;AAAtC;AAEI;AAFJ;AAII;AACA;AACA;AACA;;AAgBA;AACJ;AAhBI;AAAA;AACI;AACI;AACA;AACA;AACJ;AACJ;AACA;AACI;AACA;AACI;AACH;AACD;AACJ;AArBiB;AADpB;AACoB;AAwBrB;AAxBA;AAAqB;;;;;;;;;ACVrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAEM;AAGN;AAAsC;AAAtC;;AAiBA;AAdI;AAEA;AAEA;AAEA;AAEA;AACI;AACA;AACJ;AAdiB;AADpB;AACoB;AAiBrB;AAjBA;AAAqB","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport class NewClass2 extends cc.Component {\r\n\r\n    //@property(cc.SpriteFrame)\r\n    bgpics: cc.SpriteFrame[] = [];\r\n    \r\n    bg01: cc.Node = null;\r\n    bg02: cc.Node = null;\r\n\r\n    numbgs: number = 1\r\n\r\n    bg01insight: boolean = false;\r\n    curbg: number = 0\r\n    bgduration: number = 4.5\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.bg01 = this.node.getChildByName(\"bg01\")\r\n        this.bg02 = this.node.getChildByName(\"bg02\")\r\n        this.bg01.y = 0\r\n        this.bg02.y = 0\r\n    }\r\n\r\n    //start () {}\r\n\r\n    movestart(){\r\n        cc.resources.loadDir(\"source/background/\"+Math.floor(Math.random()*(this.numbgs)).toString(), cc.SpriteFrame, (err, assets:cc.SpriteFrame[])=> {\r\n            \r\n            this.bgpics = assets.sort((a: cc.SpriteFrame, b: cc.SpriteFrame)=>+a.name-+b.name)\r\n            if(!this.bg01insight){\r\n                this.bg02.getComponent(cc.Sprite).spriteFrame = this.bgpics[0]\r\n            }\r\n            else{\r\n                this.bg01.getComponent(cc.Sprite).spriteFrame = this.bgpics[0]\r\n            }\r\n            this.curbg = 1\r\n            this.bgrun()\r\n            this.schedule(this.bgrun,this.bgduration,cc.macro.REPEAT_FOREVER)\r\n        });\r\n        \r\n    }\r\n    movestop(){\r\n        this.unschedule(this.bgrun)\r\n        this.bg01.getComponent(cc.Animation).stop()\r\n        this.bg02.getComponent(cc.Animation).stop()\r\n    }\r\n    bgrun(){\r\n        if(this.bg01insight){\r\n            this.bg02.getComponent(cc.Sprite).spriteFrame = this.bgpics[this.curbg]\r\n        }\r\n        else{\r\n            this.bg01.getComponent(cc.Sprite).spriteFrame = this.bgpics[this.curbg]\r\n        }\r\n        if(this.bg01insight){\r\n            this.bg01.getComponent(cc.Animation).play(\"bgmoveout\").duration = this.bgduration\r\n            this.bg02.getComponent(cc.Animation).play(\"bgmovein\").duration = this.bgduration\r\n        }\r\n        else{\r\n            this.bg01.getComponent(cc.Animation).play(\"bgmovein\").duration = this.bgduration\r\n            this.bg02.getComponent(cc.Animation).play(\"bgmoveout\").duration = this.bgduration\r\n        }\r\n        this.bg01insight = !this.bg01insight\r\n        this.curbg++\r\n        if(this.curbg==this.bgpics.length){\r\n            this.curbg = 0\r\n        }\r\n    }\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    numbgs:number = 1\r\n    curpic:number = 0\r\n    obspics: cc.SpriteFrame[] = [];\r\n    start () {\r\n        cc.resources.loadDir(\"source/coin\"+Math.floor(Math.random()*(this.numbgs)).toString(), cc.SpriteFrame, (err, assets:cc.SpriteFrame[])=> {\r\n            this.obspics = assets\r\n            this.changeframe()\r\n            this.schedule(this.changeframe,1/this.obspics.length,cc.macro.REPEAT_FOREVER)\r\n        });\r\n    }\r\n    changeframe(){\r\n        this.curpic++\r\n        if(this.curpic>=this.obspics.length){\r\n            this.curpic = 0\r\n        }\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.obspics[this.curpic]\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    //start () {\r\n\r\n    //}\r\n\r\n    onBeginContact() {\r\n        cc.find(\"Canvas\").getComponent(\"main\").onBeginContactCoin()\r\n        this.node.active = false\r\n        //console.log('on collision enter')\r\n    }\r\n    \r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    //@property(cc.Label)\r\n    //label: cc.Label = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    basegravity:number = -150;\r\n    jumpspeed:number = 200;\r\n    rightcondition:boolean = false;\r\n    leftcondition:boolean = false;\r\n    stop:boolean = false;\r\n\r\n    @property(cc.AudioClip)\r\n    jumpaudio:cc.AudioClip = null;\r\n\r\n    heropics:cc.SpriteFrame[] = [];\r\n    //curpic:number = 0\r\n\r\n    //onLoad () {\r\n    //    \r\n    //}\r\n\r\n    //start () {\r\n\r\n    //}\r\n    \r\n    movestart(){\r\n        cc.resources.loadDir(\"source/hero\", cc.SpriteFrame, (err, assets:cc.SpriteFrame[])=> {\r\n            this.heropics = assets\r\n            //this.changeframe()\r\n            //this.schedule(this.changeframe,0.5,cc.macro.REPEAT_FOREVER)\r\n        });\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,this.keyup,this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,this.keydown,this);\r\n        this.node.x = -430\r\n        this.node.y = 0\r\n        this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0, this.basegravity);\r\n    }\r\n    //changeframe(){\r\n    //    this.curpic++\r\n    //    if(this.curpic>=this.heropics.length){\r\n    //        this.curpic = 0\r\n    //    }\r\n    //    this.node.getComponent(cc.Sprite).spriteFrame = this.heropics[this.curpic]\r\n    //}\r\n    movestop(){\r\n        //this.unschedule(this.changeframe)\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP,this.keyup,this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN,this.keydown,this);\r\n        this.stop = true\r\n    }\r\n    keyup(event)\r\n    {\r\n        if(event.keyCode==cc.macro.KEY.space)\r\n        {\r\n            this.herojump()\r\n        }\r\n        else if(event.keyCode==cc.macro.KEY.right)\r\n        {\r\n            if(this.rightcondition){\r\n                this.stop = true\r\n            }\r\n            this.rightcondition = false\r\n        }\r\n        else if(event.keyCode==cc.macro.KEY.left)\r\n        {\r\n            if(this.leftcondition){\r\n                this.stop = true\r\n            }\r\n            this.leftcondition = false\r\n        }\r\n    }\r\n    keydown(event)\r\n    {     \r\n        if(event.keyCode==cc.macro.KEY.right)\r\n        {\r\n            this.stop = false\r\n            this.rightcondition = true\r\n            if(this.leftcondition){\r\n                this.leftcondition = false\r\n            }\r\n            this.herorightstart()\r\n        }\r\n        else if(event.keyCode==cc.macro.KEY.left)\r\n        {\r\n            this.stop = false\r\n            this.leftcondition = true\r\n            if(this.rightcondition){\r\n                this.rightcondition = false\r\n            }\r\n            this.heroleftstart()\r\n        }\r\n    }\r\n    herojump(){\r\n        cc.audioEngine.playEffect(this.jumpaudio, false);\r\n        this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(this.node.getComponent(cc.RigidBody).linearVelocity.x, this.jumpspeed);\r\n    }\r\n    herorightstart(){\r\n        cc.director.getPhysicsManager().gravity = cc.v2(100, this.basegravity);\r\n    }\r\n    heroleftstart(){\r\n        cc.director.getPhysicsManager().gravity = cc.v2(-100, this.basegravity);\r\n    }\r\n    update (dt) {\r\n        if(this.stop){\r\n            if(this.node.getComponent(cc.RigidBody).linearVelocity.x>0){\r\n                cc.director.getPhysicsManager().gravity = cc.v2(-50, this.basegravity);\r\n            }\r\n            else{\r\n                cc.director.getPhysicsManager().gravity = cc.v2(50, this.basegravity);\r\n            }\r\n            if(Math.abs(this.node.getComponent(cc.RigidBody).linearVelocity.x)<10){\r\n                this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, this.node.getComponent(cc.RigidBody).linearVelocity.y);\r\n            }\r\n        }\r\n        else{\r\n            if(this.node.getComponent(cc.RigidBody).linearVelocity.x>150){\r\n                cc.director.getPhysicsManager().gravity = cc.v2(cc.director.getPhysicsManager().gravity.x, this.basegravity);\r\n                this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(150, this.node.getComponent(cc.RigidBody).linearVelocity.y);\r\n            }\r\n            else if(this.node.getComponent(cc.RigidBody).linearVelocity.x<-150){\r\n                cc.director.getPhysicsManager().gravity = cc.v2(cc.director.getPhysicsManager().gravity.x, this.basegravity);\r\n                this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(-150, this.node.getComponent(cc.RigidBody).linearVelocity.y);\r\n            }\r\n        }\r\n        if(this.heropics.length>0){\r\n            if(this.node.getComponent(cc.RigidBody).linearVelocity.y<0){\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.heropics[0]\r\n            }\r\n            else{\r\n                this.node.getComponent(cc.Sprite).spriteFrame = this.heropics[1]\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n//import {NewClass2} from \"./bgmove\"\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    bgnode: cc.Node = null;\r\n    @property(cc.Node)\r\n    heronode: cc.Node = null;\r\n    //@property(NewClass2)\r\n    //bgmovescript: NewClass2 = null;\r\n    //@property(NewClass3)\r\n    //bgmovescript: NewClass3 = null;\r\n    @property(cc.Node)\r\n    obsnode: cc.Node = null;\r\n    @property(cc.Node)\r\n    obsparent: cc.Node = null;\r\n    @property(cc.Node)\r\n    coinnode: cc.Node = null;\r\n    @property(cc.Node)\r\n    coinparent: cc.Node = null;\r\n    @property(cc.Node)\r\n    floornode: cc.Node = null;\r\n    @property(cc.Node)\r\n    tipstartnode: cc.Node = null;\r\n    //@property(cc.Label)\r\n    //label: cc.Label = null;\r\n\r\n    @property(cc.AudioClip)\r\n    dieaudio:cc.AudioClip = null;\r\n    @property(cc.AudioClip)\r\n    coinaudio:cc.AudioClip = null;\r\n\r\n    @property(cc.Label)\r\n    timepass: cc.Label = null;\r\n    @property(cc.Label)\r\n    coinlabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    cointoplabel: cc.Label = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    obsPool:cc.NodePool = null;\r\n    coinPool:cc.NodePool = null;\r\n    gamestart:boolean = false;\r\n    gamestartdelay:boolean = false;\r\n\r\n    timenow:Date = null;\r\n    coincount:number = 0;\r\n    cointop:number = 0;\r\n\r\n    onLoad () {\r\n        cc.director.getPhysicsManager().enabled = true\r\n        this.obsPool = new cc.NodePool();\r\n        let countobs = 20;\r\n        for (let i = 0; i < countobs; i++) {\r\n            let obs = cc.instantiate(this.obsnode);\r\n            this.obsPool.put(obs);\r\n        }\r\n        this.coinPool = new cc.NodePool();\r\n        let countcoin = 2;\r\n        for (let i = 0; i < countcoin; i++) {\r\n            let coin = cc.instantiate(this.coinnode);\r\n            this.coinPool.put(coin);\r\n        }\r\n    }\r\n\r\n    start () {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,this.keyup,this);\r\n    }\r\n\r\n    maingamestart(){\r\n        this.timenow = new Date()\r\n        this.coincount = 0\r\n        this.coinlabel.string = \"x \"+this.coincount.toString()\r\n        this.tipstartnode.active = false\r\n        this.bgnode.getComponent(\"bgmove\").movestart()\r\n        this.heronode.getComponent(\"heromove\").movestart()\r\n        this.schedule(this.obscreate,0.5,cc.macro.REPEAT_FOREVER)\r\n        this.schedule(this.coincreate,0.75,cc.macro.REPEAT_FOREVER)\r\n    }\r\n    obscreate(){\r\n        if(Math.random()>0.55){\r\n            if (this.obsPool.size() > 0) {\r\n                var obsduration = Math.random()+2.5\r\n                let obs:cc.Node = null;\r\n                obs = this.obsPool.get();\r\n                obs.parent = this.obsparent\r\n                obs.x = 1100\r\n                obs.y = Math.floor(Math.random()*600)-320\r\n                obs.getComponent(cc.Animation).play(\"obsmove\").duration = obsduration\r\n                this.schedule(()=>{this.obsPool.put(obs)},obsduration,0)\r\n            }\r\n        }\r\n    }\r\n    coincreate(){\r\n        if(Math.random()>0.5){\r\n            if (this.coinPool.size() > 0) {\r\n                var coinduration = Math.random()+2.5\r\n                let coin:cc.Node = null;\r\n                coin = this.coinPool.get();\r\n                coin.parent = this.coinparent\r\n                coin.x = 1100\r\n                coin.y = Math.floor(Math.random()*600)-320\r\n                coin.active = true\r\n                coin.getComponent(cc.Animation).play(\"obsmove\").duration = coinduration\r\n                this.schedule(()=>{this.coinPool.put(coin)},coinduration,0)\r\n            }\r\n        }\r\n    }\r\n    maingameend(){\r\n        cc.audioEngine.playEffect(this.dieaudio,false)\r\n        if(this.coincount>this.cointop && this.coincount>0){\r\n            this.cointop = this.coincount\r\n            this.cointoplabel.string = \"x \"+this.cointop.toString()\r\n        }\r\n        this.bgnode.getComponent(\"bgmove\").movestop()\r\n        this.heronode.getComponent(\"heromove\").movestop()\r\n        this.unschedule(this.obscreate)\r\n        this.unschedule(this.coincreate)\r\n        this.tipstartnode.active = true\r\n        this.schedule(()=>{this.gamestartdelay = false},4,0)\r\n    }\r\n    eatcoin(){\r\n        cc.audioEngine.playEffect(this.coinaudio,false)\r\n        this.coincount+=1\r\n        this.coinlabel.string = \"x \"+this.coincount.toString()\r\n    }\r\n    update (dt) {\r\n        if(this.gamestart){\r\n            var n_now = new Date()\r\n            this.timepass.string = ((n_now.getTime()-this.timenow.getTime())/1000).toFixed(2).toString()\r\n        }\r\n    }\r\n    onBeginContact() {\r\n        if(this.gamestart){\r\n            this.gamestart = false\r\n            console.log('MAIN on collision enter')\r\n            this.maingameend()\r\n        }\r\n    }\r\n    onBeginContactCoin() {\r\n        if(this.gamestart){\r\n            console.log('MAIN on coin collision enter')\r\n            this.eatcoin()\r\n        }\r\n    }\r\n    keyup(event)\r\n    {     \r\n        if(event.keyCode==cc.macro.KEY.space)\r\n        {\r\n            if(!this.gamestartdelay){\r\n                this.gamestart = true\r\n                this.gamestartdelay = true\r\n                this.maingamestart()\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n    numbgs:number = 5\r\n    curpic:number = 0\r\n    obspics: cc.SpriteFrame[] = [];\r\n    start () {\r\n        cc.resources.loadDir(\"source/obatacle\"+Math.floor(Math.random()*(this.numbgs)).toString(), cc.SpriteFrame, (err, assets:cc.SpriteFrame[])=> {\r\n            this.obspics = assets\r\n            this.changeframe()\r\n            this.schedule(this.changeframe,1/this.obspics.length,cc.macro.REPEAT_FOREVER)\r\n        });\r\n    }\r\n    changeframe(){\r\n        this.curpic++\r\n        if(this.curpic>=this.obspics.length){\r\n            this.curpic = 0\r\n        }\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.obspics[this.curpic]\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    //start () {\r\n\r\n    //}\r\n\r\n    onBeginContact() {\r\n        cc.find(\"Canvas\").getComponent(\"main\").onBeginContact()\r\n        //console.log('on collision enter')\r\n    }\r\n    \r\n    // update (dt) {}\r\n}\r\n"],"file":"index.js"}